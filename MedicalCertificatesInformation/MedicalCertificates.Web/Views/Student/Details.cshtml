@model MedicalCertificates.Web.Models.StudentViewModels.DetailsStudentViewModel

<h2>Описание учащегося</h2>
<hr />
<div>
    <h3>Фамилия: <strong>@Model.Surname</strong></h3>
    <h3>Имя: <strong>@Model.Name</strong></h3>
    <h3>Отчество: <strong>@Model.SecondName</strong></h3>
    <h4>Группа: <strong>@Model.Group.Name</strong></h4>
    <h4>Курс: <strong>@Model.Group.Course.Number-й</strong></h4>
    <h4>Отделение: <strong>@Model.Group.Course.Department.Name</strong></h4>
    @{ 
        var isValid = "Нет";
        MedicalCertificate lastCert = null;
        if(Model.MedicalCertificates!=null || Model.MedicalCertificates.Count != 0)
        {
            lastCert = Model.MedicalCertificates.OrderBy(p => p.Id).ToList().LastOrDefault();
        }
        if (lastCert != null)
        {
            if(lastCert.FinishDate > DateTime.Now)
            {
                isValid = "Да";
            }
        }
    }
    <h4>Действительная ли справка: <strong>@isValid</strong></h4>

    <p>
        <button onclick="GetDetailsGroupRequest(@Model.Group.Id);" class="btn btn-info">К группе учащегося</button>
    </p>
    <hr />
</div>

@if (Model.MedicalCertificates.Count != 0)
{
    <h4>Справки учащегося</h4>
    <!--Table-->
    @await Html.PartialAsync("MedicalCertificatesTable", Model.MedicalCertificates);

}
else
{
    <h4>Учащийся не принес ни одной справки</h4>
}
